#!/usr/bin/env babel-node

import TinyVM from './emu/tinyvm';
import Debugger from './emu/debugger';

var Canvas = require('canvas');  // TODO - remove this requirement
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

let canvas = new Canvas(500, 560);
  let b = [];
  b = b.concat(Debugger.encode('movd [0xF0016014], 65'));        // movd [VID_P0], '@'
  b = b.concat(Debugger.encode('movd [0xF0016018], 5'));         // movd [VID_P1], 5
  b = b.concat(Debugger.encode('movd [0xF001601C], 5'));         // movd [VID_P1], 5
  b = b.concat(Debugger.encode('movd [0xF0016020], 0'));         // movd [VID_P2], 0x000000
  b = b.concat(Debugger.encode('movd [0xF0016024], 0x00FFFF'));  // movd [VID_P4], 0xFF0000
  b = b.concat(Debugger.encode('movb [0xF0016012], 0x5'));       // movb [VID_OP], VID_OP_WRITE
let vm = new TinyVM(256, [], canvas, new Uint8Array(b));
let dbg = new Debugger(vm);

console.log(dbg.welcome());

rl.setPrompt('- ');
rl.prompt();

rl.on('line', (line) => {
  console.log(dbg.parse(line));
  rl.prompt();
});

// vim: ts=2:sw=2:sts=2:expandtab:syntax=javascript
